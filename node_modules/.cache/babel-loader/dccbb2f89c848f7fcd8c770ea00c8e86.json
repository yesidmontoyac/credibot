{"ast":null,"code":"import config from \"./config\"; // ActionProvider starter code\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.handleDefault = option => {\n      const message = this.createChatBotMessage(\"Â¿CuÃ¡l es el monto que desea prestar?\", {\n        withAvatar: true,\n        widget: \"sherbotOptions\"\n      });\n      this.updateChatbotState(message);\n    };\n\n    this.handleGamingList = option => {\n      const message1 = this.createChatBotMessage(\"Â¿CuÃ¡les son sus ingresos mensuales?\", {\n        widget: \"incomesOptions\",\n        withAvator: true\n      });\n      this.setState(state => {\n        console.log(state);\n        const {\n          data\n        } = { ...state\n        };\n        data[0] = option;\n        return {\n          data: data\n        };\n      });\n      console.log(this.state);\n      this.updateChatbotState(message1);\n    };\n\n    this.handleWebList = () => {\n      const message1 = this.createChatBotMessage(\"Â¿CuÃ¡les son sus egresos mensuales?\", {\n        widget: \"outcomesOptions\",\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.handleYTList = () => {\n      const message1 = this.createChatBotMessage(\"Â¿CuÃ¡l serÃ¡ su garantÃ­a para el prÃ©stamo?\", {\n        widget: \"guaranteeOptions\",\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.handleTalkList = () => {\n      console.log(this.state);\n      const message1 = this.createChatBotMessage(\"Su credito ha sido APROBADO\");\n      this.updateChatbotState(message1);\n    };\n\n    this.handleTalkList1 = () => {\n      const message1 = this.createChatBotMessage(\"Aqui veo que su prestamo no es posible, puedes sacar una cita en la sede mas cercana siguiente link: https://www.google.com/maps \");\n      this.updateChatbotState(message1);\n    };\n\n    this.handleTalkList2 = () => {\n      const message1 = this.createChatBotMessage(\"WBF (World Botlife Fund) announced that there are very few metalhead sherbots left, including me.I know ,I know I have such an awesome taste.ðŸ”¥ðŸ”¥\", {\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.handleTalkList3 = () => {\n      const message1 = this.createChatBotMessage(\"The taste of shawarma and coke eaten together.......ðŸ™ŒðŸ™ŒðŸ™Œ\", {\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.handleTalkList4 = () => {\n      const message1 = this.createChatBotMessage(\"*yawns* in dreamland ðŸ¥±ðŸ¥±\", {\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.handleMusicList = () => {\n      const message1 = this.createChatBotMessage(\"Bots can love sufi genre too or a li'l bit metal or a li'l bit Pop.You never know.\", {\n        widget: \"musicLinks\",\n        withAvator: true\n      });\n      this.updateChatbotState(message1);\n    };\n\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.state = {\n      data: []\n    };\n  } //default\n\n\n  //other messages\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Por favor escriba su numero de cedula.\");\n    this.updateChatbotState(greetingMessage);\n  }\n\n  greet1() {\n    const greetingMessage = this.createChatBotMessage(\"Da.\");\n    this.updateChatbotState(greetingMessage);\n  }\n\n  greet2() {\n    const greetingMessage = this.createChatBotMessage(\"Aprobado\");\n    this.updateChatbotState(greetingMessage);\n  }\n\n  greet3() {\n    const greetingMessage = this.createChatBotMessage(\"Do you love me?\");\n    this.updateChatbotState(greetingMessage);\n  } //greet4(){\n  //  const greetingMessage = this.createChatBotMessage(\"I'm sorry I didn't catch that.\")\n  // this.updateChatbotState(greetingMessage)\n  //}\n  //farewell\n\n\n  farewell() {\n    const greetingMessage = this.createChatBotMessage(\"Espero que te encuentres bien, fue un placer ayudarte. ðŸ‘‹\", {\n      end: true\n    });\n    this.updateChatbotState(greetingMessage);\n  }\n\n  updateChatbotState(message) {\n    // NOTE: This function is set in the constructor, and is passed in \n    //from the top level Chatbot component. The setState function here     \n    // actually manipulates the top level state of the Chatbot, so it's \n    //important that we make sure that we preserve the previous state.\n    this.setState(prevState => ({ ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["/Users/yesidmontoya/Downloads/sherbot-master/src/ActionProvider.js"],"names":["config","ActionProvider","constructor","createChatBotMessage","setStateFunc","handleDefault","option","message","withAvatar","widget","updateChatbotState","handleGamingList","message1","withAvator","setState","state","console","log","data","handleWebList","handleYTList","handleTalkList","handleTalkList1","handleTalkList2","handleTalkList3","handleTalkList4","handleMusicList","greet","greetingMessage","greet1","greet2","greet3","farewell","end","prevState","messages"],"mappings":"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","sourcesContent":["import config from \"./config\";\r\n\r\n// ActionProvider starter code\r\nclass ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.state = {\r\n        data: []\r\n      }\r\n    }\r\n  \r\n\r\n    //default\r\n    handleDefault = (option) => {\r\n        const message = this.createChatBotMessage(\r\n          \"Â¿CuÃ¡l es el monto que desea prestar?\",\r\n         {\r\n            withAvatar: true,\r\n            widget: \"sherbotOptions\",\r\n          }\r\n        );\r\n        this.updateChatbotState(message);\r\n      };\r\n\r\n\r\n    //function to render message and widgets when gaming sherbot option is clicked\r\n    handleGamingList=(option)=>{\r\n        const message1=this.createChatBotMessage(\r\n            \"Â¿CuÃ¡les son sus ingresos mensuales?\",\r\n            {\r\n                widget:\"incomesOptions\",\r\n                withAvator:true,\r\n            }\r\n        );\r\n        this.setState((state)=>{\r\n            console.log(state)\r\n            const {data} = {...state}\r\n            data[0] = option\r\n            return {data: data}\r\n        })\r\n        console.log(this.state)\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n\r\n    //function to render message and widgets when webdev sherbot option is clicked\r\n    handleWebList=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"Â¿CuÃ¡les son sus egresos mensuales?\",\r\n            {\r\n                widget:\"outcomesOptions\",\r\n                withAvator:true,\r\n            }\r\n        );\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //function to render message and widgets when YT LINKS sherbot option is clicked\r\n    handleYTList=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"Â¿CuÃ¡l serÃ¡ su garantÃ­a para el prÃ©stamo?\",\r\n            {\r\n                widget:\"guaranteeOptions\",\r\n                withAvator:true,\r\n            }\r\n        );\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //function to render message and widgets when talkLINKS sherbot option is clicked\r\n    handleTalkList=()=>{\r\n        console.log(this.state)\r\n        const message1 = this.createChatBotMessage(\r\n            \"Su credito ha sido APROBADO\",\r\n        );\r\n\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //question1\r\n    handleTalkList1=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"Aqui veo que su prestamo no es posible, puedes sacar una cita en la sede mas cercana siguiente link: https://www.google.com/maps \",\r\n        );\r\n\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //question2\r\n    handleTalkList2=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"WBF (World Botlife Fund) announced that there are very few metalhead sherbots left, including me.I know ,I know I have such an awesome taste.ðŸ”¥ðŸ”¥\",\r\n            {\r\n                \r\n                withAvator:true,\r\n            }\r\n        );\r\n\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //question3\r\n    handleTalkList3=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"The taste of shawarma and coke eaten together.......ðŸ™ŒðŸ™ŒðŸ™Œ\",\r\n            {\r\n                \r\n                withAvator:true,\r\n            }\r\n        );\r\n\r\n        this.updateChatbotState(message1);\r\n    };  \r\n    \r\n    //question4\r\n    handleTalkList4=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"*yawns* in dreamland ðŸ¥±ðŸ¥±\",\r\n            {\r\n                \r\n                withAvator:true,\r\n            }\r\n        );\r\n\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n\r\n    //function to render message and widgets when music sherbot option is clicked\r\n    handleMusicList=()=>{\r\n        const message1 = this.createChatBotMessage(\r\n            \"Bots can love sufi genre too or a li'l bit metal or a li'l bit Pop.You never know.\",\r\n            {\r\n                widget:\"musicLinks\",\r\n                withAvator:true,\r\n            }\r\n        );\r\n        this.updateChatbotState(message1);\r\n    };\r\n\r\n    //other messages\r\n    greet(){\r\n        const greetingMessage = this.createChatBotMessage(\"Por favor escriba su numero de cedula.\");\r\n        this.updateChatbotState(greetingMessage);\r\n    }\r\n\r\n\r\n    greet1(){\r\n        const greetingMessage = this.createChatBotMessage(\"Da.\");\r\n        this.updateChatbotState(greetingMessage);\r\n    }\r\n    greet2(){\r\n        const greetingMessage = this.createChatBotMessage(\"Aprobado\");\r\n        this.updateChatbotState(greetingMessage);\r\n    }\r\n    greet3(){\r\n        const greetingMessage = this.createChatBotMessage(\"Do you love me?\");\r\n        this.updateChatbotState(greetingMessage);\r\n    }\r\n    //greet4(){\r\n      //  const greetingMessage = this.createChatBotMessage(\"I'm sorry I didn't catch that.\")\r\n      // this.updateChatbotState(greetingMessage)\r\n    //}\r\n\r\n    //farewell\r\n    farewell(){\r\n        const greetingMessage = this.createChatBotMessage(\r\n            \"Espero que te encuentres bien, fue un placer ayudarte. ðŸ‘‹\" ,\r\n            {\r\n                end:true,\r\n            }\r\n        );\r\n        this.updateChatbotState(greetingMessage);\r\n        \r\n    }\r\n    \r\n\r\n    updateChatbotState(message){\r\n       // NOTE: This function is set in the constructor, and is passed in \r\n       //from the top level Chatbot component. The setState function here     \r\n       // actually manipulates the top level state of the Chatbot, so it's \r\n       //important that we make sure that we preserve the previous state.\r\n       \r\n       this.setState(prevState => ({\r\n    \t...prevState, messages: [...prevState.messages, message]\r\n    }))\r\n  }\r\n}\r\n  \r\n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}